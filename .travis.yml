# Travis CI (MIT License) configuration file for Options Importer
# @link https://travis-ci.org/

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Specify when Travis should build.
branches:
  only:
    - master
    - /^release-v.*$/

cache:
  directories:
    - $HOME/.composer/cache
    - ./vendor

matrix:
  include:
    - php: '5.3'
      env: WP_VERSION=3.8
      dist: precise
    - php: '5.6'
      env: WP_VERSION=3.8
    - php: '7.0'
      env: WP_VERSION=latest
    - php: '7.3'
      env: WP_VERSION=latest WP_TRAVISCI=phpcs PHP_LINT=1 WP_PHPCS=1
    - php: '7.4'
      env: WP_VERSION=nightly
  fast_finish: true
  allow_failures:
    - php: '7.4'

# Prepare your build for testing.
# Failures in this section will result in build status 'errored'.
before_script:
  # Turn off Xdebug. See https://core.trac.wordpress.org/changeset/40138.
  - phpenv config-rm xdebug.ini || echo "Xdebug not available"
  - export OG_DIR="$(pwd)"

  - export PATH="$HOME/.composer/vendor/bin:$PATH"

  # Couple the PHPUnit version to the PHP version.
  - |
    case "$TRAVIS_PHP_VERSION" in
      7.*)
        echo "Using PHPUnit 6.1"
        composer global require "phpunit/phpunit=6.1.*"
        ;;
      *)
        echo "Using PHPUnit 4.8"
        composer global require "phpunit/phpunit=4.8.*"
        ;;
    esac

  - |
    if [[ "$WP_TRAVISCI" == "phpcs" ]] ; then
      # Composer Install
      travis_retry composer install
      export PATH=$PATH:`pwd`/vendor/bin/
    fi

  - phpenv rehash

  # For debugging.
  - pwd
  - which phpunit
  - phpunit --version
  - echo $PATH

# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
  # Search for PHP syntax errors.
  #
  # Only need to run this once per PHP version.
  - |
    if [[ "$PHP_LINT" == "1" ]] ; then
      find . -type "f" -iname "*.php" -not -path "./vendor/*" | xargs -L "1" php -l
    fi

  # WordPress Coding Standards.
  #
  # These are the same across PHP and WordPress, so we need to run them only once.
  #
  # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
  # @link http://pear.php.net/package/PHP_CodeSniffer/
  - |
    if [[ "$WP_PHPCS" == "1" ]] ; then
      phpcs -n
    fi

  # Run the plugins's unit tests, both in single and multisite.
  - phpunit
  - WP_MULTISITE=1 phpunit

# Receive notifications for build results.
# @link http://docs.travis-ci.com/user/notifications/#Email-notifications
notifications:
  email: false
